@tailwind base;
@tailwind components;
@tailwind utilities;
@import '_variables';
@import 'mixins.scss';

body {
	overflow-x: hidden;
}

#__next {
	min-height: 100vh;
	display: flex;
	flex-wrap: wrap;
	flex-direction: column;
	justify-content: space-between;
}

main {
	min-height: 100vh;
	width: 100%;
}

@layer base {
	:root {
		font-size: 14px !important;
	}
}

/*=================================================================================================
CONTAINERS
=================================================================================================*/

.container {
	@include adaptableContainer($container-width);
}
.container-fluid {
	@include adaptableContainer(100%);
}
.container-md {
	@include adaptableContainer($container-md-width);
}
.container-sm {
	@include adaptableContainer($container-sm-width);
}
.container-xs {
	@include adaptableContainer($container-xs-width);
}

/*=================================================================================================
GRID SYSTEM
=================================================================================================*/

.row {
	display: flex;
	flex-flow: row wrap;
	// max-width: 100%;

	& > .col {
		overflow: visible;

		&.col-grow {
			flex: 1 0 0% !important;
		}
		&.col-auto {
			flex: 0 0 auto;
			width: auto;
		}
	}
}

@include colSystem();

@layer components {
	/*=================================================================================================
	BASICS
	=================================================================================================*/

	main {
		min-height: 100vh;
	}

	body {
		overflow-x: hidden;
	}

	#__next {
		min-height: 100vh;
		display: flex;
		flex-wrap: wrap;
		flex-direction: column;
		justify-content: space-between;
	}

	/*=================================================================================================
	LAYOUT EXTRA CLASSES
	=================================================================================================*/

	.clearfix {
		@include clearfix;
	}

	.text-ellipsis {
		text-overflow: ellipsis;
		overflow: hidden;
		white-space: nowrap;
		min-width: 0;
	}

	.col-ellipsis {
		min-width: 0;
	}

	.col-ellipsis * {
		text-overflow: ellipsis;
		overflow: hidden;
		white-space: nowrap;
		min-width: 0;
	}

	.cols {
		@apply grid;
		@apply gap-4;
		@apply grid-cols-12;
	}

	.center-v {
		@apply items-center flex;
	}

	.h-min-screen {
		min-height: 100vh;
	}

	.withScroll {
		@include withScroll();
	}

	.withFakeScroll {
		padding-right: 24px;
	}

	/*=================================================================================================
	ICONS
	=================================================================================================*/

	i.ic {
		display: inline-block;
		position: relative;
		height: 1em;
		width: 1em;
		background: transparent center center no-repeat;
	}

	i.ic,
	i.ic * {
		transition: all 0s !important;
	}

	i.ic svg {
		position: absolute;
		top: 0;
		left: 0;
		width: 1em;
		height: 1em;
	}

	i.ic svg path,
	i.ic svg circle {
		fill: currentColor;
	}

	a i.ic {
		pointer-events: none;
	}

	/*=====================================================================================================================
	SPINNER
	=====================================================================================================================*/

	.spinnerContainer {
		height: 3.4rem;
		width: 100%;
		position: relative;
	}

	.spinner {
		z-index: 2;
		position: absolute;
		top: 0;
		left: 50%;
		margin: 0;
		width: 3.4rem;
		height: 3.4rem;
		transition: opacity 2s;
		transform: translateX(-50%);
	}
	.spinner .spinnerIcon {
		animation: spinnerRotate 2s linear infinite;
	}
	p .spinner {
		width: 1rem;
		height: 1rem;
		margin: -0.15rem -0.5rem;
	}
	.spinner .path {
		stroke: #bbb;
		stroke-linecap: round;
		-webkit-animation: spinnerDash 1.5s ease-in-out infinite;
		animation: spinnerDash 1.5s ease-in-out infinite;
	}

	@keyframes spinnerRotate {
		100% {
			-webkit-transform: rotate(360deg);
			transform: rotate(360deg);
		}
	}
	@keyframes spinnerDash {
		0% {
			stroke-dasharray: 1, 150;
			stroke-dashoffset: 0;
		}
		50% {
			stroke-dasharray: 90, 150;
			stroke-dashoffset: -35;
		}
		100% {
			stroke-dasharray: 90, 150;
			stroke-dashoffset: -124;
		}
	}
}
